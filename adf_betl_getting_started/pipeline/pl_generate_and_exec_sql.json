{
	"name": "pl_generate_and_exec_sql",
	"properties": {
		"activities": [
			{
				"name": "ForEachObj",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get objects",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get objects').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "generate_sql",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[parse_handlebars_obj_id]",
									"storedProcedureParameters": {
										"batch_id": {
											"type": "Int32",
											"value": null
										},
										"obj_id": {
											"type": "Int32",
											"value": {
												"value": "@item().obj_id",
												"type": "Expression"
											}
										},
										"output": {
											"type": "String",
											"value": null
										},
										"output_result": {
											"type": "Boolean",
											"value": "true"
										},
										"template_name": {
											"type": "String",
											"value": {
												"value": "@item().template_name",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_betl",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "exec_sql",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "generate_sql",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat( activity('generate_sql').output.firstRow._output, \n'select 0 result')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_rdw",
									"type": "DatasetReference",
									"parameters": {
										"schema_name": "dbo",
										"table_name": "Dummy"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Get objects",
				"description": "select list of object definitions in object tree ",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "If template_type is ddl",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "declare \n\t@env as varchar(255) = '@{pipeline().globalParameters.Environment}' -- 'dev'\n\t, @template_type as varchar(255) = '@{pipeline().parameters.template_type}' -- 'ddl' -- or ddl\n\t, @source as varchar(255) = '@{pipeline().parameters.source}' -- 'aw'\n\t, @schema_name as varchar(255) = '@{pipeline().parameters.schema_name}' -- 'staging_aw'\n\t, @is_definition as bit = 0 \n\nset @is_definition = case when @template_type='ddl' then 1 else 0 end -- for dll we need object definitions. for etl we need existing objects. \n\n--\t, @schema_name as varchar(255) = \n\nselect o.obj_id, o.schema_name, o.obj_name table_name, coalesce(value, inherited_value, default_value) template_name \n--select * \nfrom prop_ext p\ninner join Obj_ext o on p.obj_id = o.obj_id\nwhere \no.is_definition= @is_definition\nand _source = @source\nand schema_name = @schema_name \nand property = \n case \n\twhen @env = 'dev'  and @template_type ='ddl' then 'ddl_template_dev'\n\twhen @env <> 'dev' and @template_type ='ddl' then 'ddl_template_tap'\n\twhen @template_type ='etl' then 'etl_template'\n  end \n\n\n--select * from static.template\n--select * from obj_ext",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_betl",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "If template_type is ddl",
				"description": "make sure that the schema exists",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.template_type, 'ddl')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "create_schema_if_not_exists",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": "IF NOT EXISTS ( SELECT  *\n                FROM    sys.schemas\n                WHERE   name = N'@{pipeline().parameters.schema_name}' )\n    EXEC('CREATE SCHEMA [@{pipeline().parameters.schema_name}]')\n\nselect 'done' result\n",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_rdw",
									"type": "DatasetReference",
									"parameters": {
										"schema_name": "dbo",
										"table_name": "Dummy"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"source": {
				"type": "string",
				"defaultValue": "aw"
			},
			"schema_name": {
				"type": "string",
				"defaultValue": "staging_aw"
			},
			"template_type": {
				"type": "string",
				"defaultValue": "ddl"
			}
		},
		"variables": {
			"obj_tree_sql": {
				"type": "String"
			},
			"template_name": {
				"type": "String",
				"defaultValue": "unknown"
			}
		},
		"annotations": [],
		"lastPublishTime": "2021-07-07T15:48:49Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}