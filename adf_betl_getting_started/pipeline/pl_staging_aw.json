{
	"name": "pl_staging_aw",
	"properties": {
		"activities": [
			{
				"name": "ingest_obj_tree",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "-- get all databases, schemas, tables, views and columns. \nselect \n\tnull src_obj_id\n\t, isnull(o.object_id, db.database_id) external_obj_id \n\t,  case \n\t\twhen SERVERPROPERTY('EngineEdition') < 4 then 15 -- on premise\n\t\twhen SERVERPROPERTY('EngineEdition') >= 5 then 10 -- azure\n\t  end  server_type_id\n\t, @@SERVERNAME server_name \n\t, db.name db_name\n\t, s.name [schema_name]\n\t, o.name as obj_name \n\t, case \n\t\t\twhen o.type = 'U' then 10 \n\t\t\twhen o.type = 'V' then 20 \n\t\t\twhen s.name is not null then 30\n\t\t\twhen db.name is not null then 40 \n\t\t\telse 50 -- server\n\t  end obj_type_id \n\t, c.column_id ordinal_position\n\t, c.name column_name\n\t, null column_type_id\n\t, convert(int, c.is_nullable) is_nullable\n\t, t.name data_type \n\t, c.max_length max_len\n\t--, case when DATA_TYPE in ('int', 'bigint', 'smallint', 'tinyint', 'bit') then cast(null as int) else numeric_precision end numeric_precision\n\t, convert(tinyint, CASE -- int/decimal/numeric/real/float/money  \n\t  WHEN c.system_type_id IN (48, 52, 56, 59, 60, 62, 106, 108, 122, 127) THEN c.precision  \n\t  END)          AS numeric_precision\n\t, convert(int, CASE -- datetime/smalldatetime  \n\t  WHEN c.system_type_id IN (40, 41, 42, 43, 58, 61) THEN NULL  \n\t  ELSE ODBCSCALE(c.system_type_id, c.scale) END) AS numeric_scale\n\t, case when ic.is_descending_key=0 then 'ASC'when ic.is_descending_key=1 then 'DESC'else null end [primary_key_sorting]\n\t, convert(nvarchar(4000),  \n\t  OBJECT_DEFINITION(c.default_object_id))   AS [default_value]\n\t, null _source\nfrom\n\tsys.databases db\n\tfull outer join sys.schemas s on db.database_id = db_id()\n\tleft join sys.objects o on o.schema_id = s.schema_id\n\tand o.type in ( 'U','V') -- only tables and views\n\tand o.object_id not in \n\t\t(\n\t\tselect major_id \n\t\tfrom sys.extended_properties  \n\t\twhere name = N'microsoft_database_tools_support' \n\t\tand minor_id = 0 and class = 1) -- exclude ssms diagram objects\n\tleft join sys.columns c on c.object_id = o.object_id \n\tleft join sys.types t on c.user_type_id = t.user_type_id \n\t--  = s.name and col.table_name = o.name\n\t--\tleft join sys.columns col on \n\t--col.table_schema = s.name \n\t\t--and col.table_name = o.name \n\t\t--and col.COLUMN_NAME=c.name\n\tleft join sys.indexes i on \n\t\ti.object_id = o.object_id \n\t\tand i.is_primary_key = 1\n\tleft join sys.index_columns ic on \n\t\tic.object_id = o.object_id \n\t\tand ic.column_id = c.column_id\nwhere \n\tisnull(s.name,'') not in ( 'sys', 'INFORMATION_SCHEMA', 'guest') \n\tand isnull(s.name,'') not like 'db[_]%'\n\tand db.name not in ('master','model','msdb','tempdb')\n\n-- add users\nunion all \n\nselect null src_obj_id\n\t, suser_sid() external_obj_id\n\t,  case \n\t\twhen SERVERPROPERTY('EngineEdition') < 4 then 15 -- on premise\n\t\twhen SERVERPROPERTY('EngineEdition') >= 5 then 10 -- azure\n\t  end  server_type \n\t, @@SERVERNAME server_name \n\t, db_name() db_name\n\t, null [schema_name]\n\t, suser_sname()  obj_name\n\t, 60 obj_type_id -- user\n\t, null ordinal_position\n\t, null column_name\n\t, null column_type_id\n\t, null is_nullable\n\t, null data_type\n\t, null\n\t, null\n\t, null\n\t, null\n\t, null\n\t, null\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"sqlWriterStoredProcedureName": "[dbo].[ingest_obj_tree]",
						"sqlWriterTableType": "ObjTreeTableParam",
						"storedProcedureTableTypeParameterName": "obj_tree_param",
						"storedProcedureParameters": {
							"batch_id": {
								"type": "Int32",
								"value": null
							},
							"detect_schema_delete": {
								"type": "Boolean",
								"value": null
							},
							"detect_table_delete": {
								"type": "Boolean",
								"value": null
							},
							"detect_user_delete": {
								"type": "Boolean",
								"value": null
							},
							"detect_view_delete": {
								"type": "Boolean",
								"value": null
							}
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_aw",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_betl",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "ForEachStagingTable",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup_staging_tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup_staging_tables').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy staging table",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_aw",
									"type": "DatasetReference",
									"parameters": {
										"schema_name": "@item.schema_name",
										"table_name": "@item.table_name"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_staging",
									"type": "DatasetReference",
									"parameters": {
										"schema_name": "staging",
										"table_name": {
											"value": "@item.schema_name+'_'+ @item.table_name",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Lookup_staging_tables",
				"description": "select tables to be transfered into staging layer of the dwh using property include_staging",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set include_staging property",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select o.obj_id, o.schema_name, o.obj_name table_name\nfrom prop_ext pe \ninner join obj_ext o on pe.obj_id = o.obj_id\nwhere property = 'include_staging' and inherited_value = 1 \nand pe.obj_type = 'table'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_betl",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "set include_staging property",
				"description": "for demo purposes we set this in the PL",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ingest_obj_tree",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "-- lets take the entire aw database \nexec setp 'include_staging', 1, '[sqldb-aw]'\n-- but exclude some tables that we don't need. \nexec setp 'include_staging', 0, '[sqldb-aw].[SalesLT].[Address]'\nexec setp 'include_staging', 0, '[sqldb-aw].[dbo].[BuildVersion]';\n\n-- select * from prop_ext where property = 'include_staging' and inherited_value = 1 and obj_type = 'table'\n-- select * from obj_ext\nselect 'done' result",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_betl",
						"type": "DatasetReference"
					}
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2021-07-07T15:48:49Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}