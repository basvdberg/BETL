{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    // start parameters
    "tags": {
      "type": "object",
      "defaultValue": {
        "department": "bicc",
        "cost_center": "bicc",
        "create_dt": "[utcNow()]",
        "admin_email": "no-reply@domain.com",
        "version": "0.1"
      },
      "metadata": {
        "description": "used for tagging resources and binding them to a department."
      }
    },

    "workloadName": {
      "type": "string",
      "metadata": {
        "description": "a collection of IT assets (servers, VMs, applications, data, or appliances) that collectively support a defined process.
          used in the naming convention <workload-name>-<dtap-environment>-<resource-type>-<instance-name>. e.g. mydwh-d-sqls-01"
      },
      "defaultValue": "mydwh"
    },

    "dtapEnvironment": {
      "type": "string",
      "metadata": {
        "description": "one letter character describing the dtap environment: D:Develop, T:Test, A:Acceptance, P:Production.
          This is used in the naming convention <workload-name>-<dtap-environment>-<resource-type>-<instance-name>. e.g. mydwh-d-sqls-01"
      },
      "defaultValue": "d"
    },

    "sqlServerInstanceName": {
      "type": "string",
      "metadata": {
        "description": "Instance name (or two digit number) of your azure sql server using naming convention <workload-name>-<dtap-environment>-sqls-<instance-name>. e.g. mydwh-d-sqls-01"
      },
      "defaultValue": "01"
    },

    "skuName": {
      "type": "string",
      "metadata": {
        "description": "The name of the SKU, typically, a letter + Number code, e.g. P3."
      },
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "HS_Gen5_2"
      ],
      "defaultValue": "Basic"
    },

    "skuTier": {
      "type": "string",
      "metadata": {
        "description": "The tier or edition of the particular SKU, e.g. Basic, Premium."
      },
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium",
        "DataWarehouse",
        "Hyperscale",
        "BusinessCritical",
        "GeneralPurpose"
      ],
      "defaultValue": "Basic"
    },

    "adminUserNameSqlServerAuth": {
      "type": "string",
      "metadata": {
        "description": "Admin username (using sql server auth.)."
      }
    },

    "adminPasswordSqlServerAuth": {
      "type": "securestring",
      "metadata": {
        "description": "Do not fill in, you will get a prompt in Powershell... Admin password (using sql server auth.)."
      }
    },

    "adminUsernameAadAuth": {
      "type": "string",
      "metadata": {
        "description": "Admin username (using Azure AD auth.)."
      }
    },

    "adminSidAadAuth": {
      "type": "string",
      "metadata": {
        "description": "Admin GUID / SID from Azure AD."
      }
    },

    "betl_db_instance_name": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Instance name of your azure sql server database using naming convention <workload-name>-<dtap-environment>-sqldb-<instance-name>. e.g. mydwh-d-sqldb-betl"
      },
      "defaultValue": "betl"

    },

    "adventureWorks_db_instance_name": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of your azure sql server database using naming convention <workload-name>-<dtap-environment>-sqldb-<instance-name>. e.g. mydwh-d-sqldb-adventureworks"
      },
      "defaultValue": "adventureworks"
    },

    "dwh_db_instance_name": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of your azure sql server database using naming convention <workload-name>-<dtap-environment>-sqldb-<instance-name>. e.g. mydwh-d-sqldb-dwh"
      },
      "defaultValue": "dwh"
    },

    "sqldbCollation": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },

    "sqldbEdition": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Basic"
    },

    "sqldbRequestedServiceObjectiveName": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      },
      "defaultValue": "Basic"
    },

    "ClientIP1": {
      "type": "string",
      "metadata": {
        "description": "Allow direct access coming from this IP address ( over public internet / no vpn)."
      }
    },

    "ClientIP2": {
      "type": "string",
      "metadata": {
        "description": "Optionally allow direct access coming from this second IP address ( over public internet / no vpn)."
      }
    },

    "dataFactoryInstanceName": {
      "type": "string",
      "metadata": {
        "description": "Data Factory Name
          used in the naming convention <workload-name>-<dtap-environment>-<resource-type>-<instance-name>. e.g. mydwh-d-df-01"
      },
      "defaultValue": "01"
    },
/*
    "gitRepoType": {
      "type": "string",
      "metadata": {
        "description": "Git repository type"
      },
      "defaultValue": "FactoryVSTSConfiguration"
    },

    "gitAccountName": {
      "type": "string",
      "metadata": {
        "description": "Git account name"
      }
    },


    "gitProjectName": {
      "type": "string",
      "metadata": {
        "description": "Git project name"
      }
    },

    "gitCollaborationBranch": {
      "type": "string",
      "metadata": {
        "description": "Git collaboration branch"
      },
      "defaultValue": "dev"
    },

    "gitRootFolder": {
      "type": "string",
      "metadata": {
        "description": "Git root folder"
      },
      "defaultValue": "/adf/"
    }
  */
    // end parameters
  },
  "variables": {
    // start variables
    "prefix": "[concat(parameters('workloadName') , '-', parameters('dtapEnvironment'))]",
    "sqlServerName": "[concat(variables('prefix'), '-sqls-', parameters('sqlServerInstanceName'))]",
    "betl_db_name": "[concat(variables('prefix'), '-sqldb-', parameters('betl_db_instance_name'))]",
    "dwh_db_name": "[concat(variables('prefix'), '-sqldb-', parameters('dwh_db_instance_name'))]",
    "aw_db_name": "[concat(variables('prefix'), '-sqldb-', parameters('adventureWorks_db_instance_name'))]",
    "dfName": "[concat(variables('prefix'), '-df-', parameters('dataFactoryInstanceName'))]",
    "dfId": "[concat('Microsoft.DataFactory/factories/', variables('dfName'))]",
    "location": "[resourceGroup().location]"
    // end variables
  },

  // start resources
  "resources": [
    {
      // start sqls
      "name": "[variables('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[variables('location')]",
      "apiVersion": "2018-06-01-preview",
      "dependsOn": [],
      "tags": {
        "department": "[parameters('tags').department]",
        "environment": "[parameters('dtapEnvironment')]",
        "cost_center": "[parameters('tags').cost_center]",
        "create_dt": "[parameters('tags').create_dt]",
        "admin_email": "[parameters('tags').admin_email]",
        "version": "[parameters('tags').version]"
      },
      "properties": {
        "administratorLogin": "[parameters('adminUserNameSqlServerAuth')]",
        "administratorLoginPassword": "[parameters('adminPasswordSqlServerAuth')]"
      },


      // start sqls resources
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[variables('location')]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]" ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "[concat(variables('sqlServerName'), '/ClientIP1')]",
          "type": "Microsoft.Sql/servers/firewallRules",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]" ],
          "properties": {
            "startIpAddress": "[parameters('ClientIP1')]",
            "endIpAddress": "[parameters('ClientIP1')]"
          }
        },
        {
          "name": "[concat(variables('sqlServerName'), '/ClientIP2')]",
          "type": "Microsoft.Sql/servers/firewallRules",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]" ],
          "properties": {
            "startIpAddress": "[parameters('ClientIP2')]",
            "endIpAddress": "[parameters('ClientIP2')]"
          }
        },

        {
          "type": "Microsoft.Sql/servers/administrators",
          "apiVersion": "2018-06-01-preview",
          "name": "[concat(variables('sqlServerName'), '/ActiveDirectory')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]" ],
          "properties": {
            "administratorType": "ActiveDirectory",
            "login": "[parameters('adminUsernameAadAuth')]",
            "sid": "[parameters('adminSidAadAuth')]",
            "tenantId": "[subscription().tenantId]"
          }
        }
        // end sqls resources
      ]
      // end sqls
    },
    {
      // start betl_db
      "name": "[concat(variables('sqlServerName'), '/', variables('betl_db_name')) ]",
      "type": "Microsoft.Sql/servers/databases",
      "location": "[variables('location')]",
      "apiVersion": "2017-10-01-preview",
      "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]" ],
      "tags": {
        "department": "[parameters('tags').department]",
        "environment": "[parameters('dtapEnvironment')]",
        "cost_center": "[parameters('tags').cost_center]",
        "create_dt": "[parameters('tags').create_dt",
        "admin_email": "[parameters('tags').admin_email",
        "version": "[parameters('tags').version"
      },

      "properties": {
        "collation": "[parameters('sqldbCollation')]",
        "edition": "[parameters('sqldbEdition')]"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "[parameters('skuTier')]"
      }
      // end betl_db
    },
    {
      // start dwh_db
      "name": "[concat(variables('sqlServerName'), '/', variables('dwh_db_name')) ]",
      "type": "Microsoft.Sql/servers/databases",
      "location": "[variables('location')]",
      "apiVersion": "2017-10-01-preview",
      "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]" ],
      "tags": {
        "department": "[parameters('tags').department]",
        "environment": "[parameters('dtapEnvironment')]",
        "cost_center": "[parameters('tags').cost_center]",
        "create_dt": "[parameters('tags').create_dt",
        "admin_email": "[parameters('tags').admin_email",
        "version": "[parameters('tags').version"
      },

      "properties": {
        "collation": "[parameters('sqldbCollation')]",
        "edition": "[parameters('sqldbEdition')]"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "[parameters('skuTier')]"
      }
      // end dwh_db
    },
    {
      // start aw_db
      "name": "[concat(variables('sqlServerName'), '/', variables('aw_db_name')) ]",
      "type": "Microsoft.Sql/servers/databases",
      "location": "[variables('location')]",
      "apiVersion": "2017-10-01-preview",
      "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]" ],
      "tags": {
        "department": "[parameters('tags').department]",
        "environment": "[parameters('dtapEnvironment')]",
        "cost_center": "[parameters('tags').cost_center]",
        "create_dt": "[parameters('tags').create_dt",
        "admin_email": "[parameters('tags').admin_email",
        "version": "[parameters('tags').version"
      },

      "properties": {
        "collation": "[parameters('sqldbCollation')]",
        "edition": "[parameters('sqldbEdition')]",
        "sampleName": "AdventureWorksLT"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "[parameters('skuTier')]"
      }
      // end aw_db
    }
    // end resources
  ]
}
